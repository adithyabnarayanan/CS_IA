/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cs_ia;

import java.awt.event.ActionEvent;
import java.util.ArrayList;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rony
 */
public class SavedEntriesTablePage extends javax.swing.JFrame {
    ArrayList<Entry> AllEntries;

    /**
     * Creates new form SavedEntriesTablePage
     */
    public SavedEntriesTablePage() {
        AllEntries = All_Entries.getAllEntries();
        initComponents();
        updateTable();
    }

    /*
     * MeetingEvent.readMeetingEventsFile();
     * ArrayList<MeetingEvent> ME = MeetingEvent.getAllMeetingEvents();
     * String[] columnNames = new String[8];
     * columnNames[0] = "Date";
     * 
     * for (int i = 0; i < 7; i++) {
     * columnNames[i + 1] = MeetingEvent.fromColumnToIndexToTimeSlotString(i);
     * }
     * 
     * LocalDate today = LocalDate.now();
     * 
     * for (int i = 0; i < ME.size(); i++) {
     * MeetingEvent M = ME.get(i);
     * 
     * if (M.getDate().compareTo(today) >= 0) {
     * // perform linear search
     * 
     * }
     * 
     * }
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        SortByStudent = new javax.swing.JMenuItem();
        SortByPriority = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "null", "null", "null", "null"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        Menu.setText("Tools");
        Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuActionPerformed(evt);
            }
        });

        SortByStudent.setText("Sort by Student");
        SortByStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByStudentActionPerformed(evt);
            }
        });
        Menu.add(SortByStudent);

        SortByPriority.setText("Sort by Priority");
        SortByPriority.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByPriorityActionPerformed(evt);
            }
        });
        Menu.add(SortByPriority);

        jMenuBar1.add(Menu);

        jMenu2.setText("Options");

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu2.add(Exit);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SortByPriorityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByPriorityActionPerformed
        All_Entries.SortByPriority();
        updateTable();
    }//GEN-LAST:event_SortByPriorityActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
            HomePage h = new HomePage();
            this.dispose();
            h.setLocationRelativeTo(null);
            h.setVisible(true);
    }//GEN-LAST:event_ExitActionPerformed

    private void SortByStudentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_SortByStudentActionPerformed
        All_Entries.SortByName();
        updateTable();
    }// GEN-LAST:event_SortByStudentActionPerformed

    private void updateTable() {
        Object[][] data = new Object[AllEntries.size()][6];
        for (int i = 0; i < AllEntries.size(); i++) {
            data[i][0] = AllEntries.get(i).getName();
            data[i][1] = AllEntries.get(i).getSubject();
            data[i][2] = AllEntries.get(i).getRq();
            data[i][3] = AllEntries.get(i).getTopic();
            data[i][4] = AllEntries.get(i).getPriorityText();
            data[i][5] = AllEntries.get(i).getDescription();
        }

        String[] columnNames = { "Name", "Subject", "Research Question", "Topic", "Priority", "Description" };
        jTable1.setModel(new javax.swing.table.DefaultTableModel(data, columnNames) {
            Boolean[] canEdit = new Boolean[] {
                    false, false, false, false, false, false // makes table non-editable
            };

            @Override
            public boolean isCellEditable(int row, int column) {
                return canEdit[column];
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SavedEntriesTablePage.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SavedEntriesTablePage.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SavedEntriesTablePage.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SavedEntriesTablePage.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SavedEntriesTablePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenu Menu;
    private javax.swing.JMenuItem SortByPriority;
    private javax.swing.JMenuItem SortByStudent;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
